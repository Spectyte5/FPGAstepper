#include <io.h>
#include "system.h"
#include "sys/alt_stdio.h"


int main()
{
	 int cnt_led=0;
    unsigned int SW = 0, cnt_w = 0, cnt_f =0, cnt_h=0, KEY=0,cnt_v=0,time=1000000;
    unsigned int wave[] = {1, 2, 4, 8};
    unsigned int waverev[] = {4, 8, 1, 2};
    unsigned int full[] = {3, 6, 12, 9};
    unsigned int fullrev[] = {12, 9, 3, 6};
    unsigned int half[] = {1, 3, 2, 6, 4, 12, 8, 9};
    unsigned int halfrev[] = {8, 9, 1, 3, 2, 6, 4, 12};
    unsigned int velocity[]={1,3,7,15,31,63,127,255,511,1023};

        while (1)
    {
        SW = IORD(PIO_SW_BASE, 0);
        KEY = IORD(PIO_KEY_BASE, 0);

   	 if (KEY & 0x02){
   	 time -= 100000;
   	 cnt_led++;
   	 }
   	 if (KEY & 0x01){
   	 time += 100000;
   	 cnt_led--;
   	 }

   	 if(time>1000000){
   		 time=1000000;
   	 }

	 if(time<100000){
   		 time=100000;
   	 }
	 if (cnt_led>9){
	 cnt_led=9;
	 }

	 if (cnt_led<0){
	 cnt_led=0;
	 }

	 IOWR(PIO_LED_BASE, 0, velocity[cnt_led]);
   	 usleep(time);
   	 printf("%d\n", time);
   	 cnt_v++;


        switch (SW)
        {
            case 2:
                cnt_f =0;
                cnt_h =0;
                //IOWR(PIO_LED_BASE, 0, wave[cnt_w %4]);
                IOWR(PIO_GPIO_BASE, 0, wave[cnt_w %4]);
                cnt_w++;

                break;

            case 3:
                cnt_f =0;
                cnt_h =0;

            	//IOWR(PIO_LED_BASE, 0, waverev[cnt_w %4]);
                IOWR(PIO_GPIO_BASE, 0, waverev[cnt_w %4]);
                cnt_w--;

                if (cnt_w<0)
                {
		cnt_w = 3;
                }

                break;

              case 4:
                cnt_w =0;
                cnt_h =0;
                //IOWR(PIO_LED_BASE, 0, full[cnt_f %4]);
                IOWR(PIO_GPIO_BASE, 0, full[cnt_f %4]);
                cnt_f++;
                break;

               case 5:
        	cnt_w =0;
                cnt_h=0;

            	//IOWR(PIO_LED_BASE, 0, fullrev[cnt_f %4]);
                IOWR(PIO_GPIO_BASE, 0, fullrev[cnt_f %4]);
                cnt_f--;
                if (cnt_f<0)
                {
		cnt_f = 3;
		}
                break;

               case 8:
		cnt_w =0;
                cnt_f=0;
                //IOWR(PIO_LED_BASE, 0, half[cnt_h %8]);
                IOWR(PIO_GPIO_BASE, 0, half[cnt_h %8]);
                cnt_h++;

                break;

            case 9:
                cnt_w =0;
                cnt_f=0;
            	//IOWR(PIO_LED_BASE, 0, halfrev[cnt_h %8]);
                IOWR(PIO_GPIO_BASE, 0, halfrev[cnt_h %8]);
            	cnt_h--;
                if (cnt_h<0)
                {
		cnt_h = 7;
		}
                break;

                default:
                IOWR(PIO_LED_BASE, 0, 0);
                IOWR(PIO_GPIO_BASE, 0, 0);
        }
    }
    return 0;
}
